<Window x:Class="PRORAM.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PRORAM"
        xmlns:views="clr-namespace:PRORAM.Views"        
        xmlns:prism="http://prismlibrary.com/"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
        prism:ViewModelLocator.AutoWireViewModel="True"        
        mc:Ignorable="d"        
        Title="{Binding Title}" 
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"        
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        Height="{Binding SystemParameters.PrimaryScreenHeight}"
        Width="{Binding SystemParameters.PrimaryScreenWidth}">

    <i:Interaction.Triggers>

        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ConnectCommand}" />
        </i:EventTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" materialDesign:ColorZoneAssist.Mode="Dark" />
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" />
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationPopUpRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:PopupConfirmationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <!--Layer notification-->
        <prism:InteractionRequestTrigger SourceObject="{Binding LayersNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:LayersView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:CustomPopupView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <!--Vista modal dispositivos radar-->
        <prism:InteractionRequestTrigger SourceObject="{Binding RadarDevicesNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="Height" Value="{Binding SystemParameters.PrimaryScreenHeight}"/>
                        <Setter Property="Width" Value="{Binding SystemParameters.PrimaryScreenWidth}"/>
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="CanResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:RadarDevicesView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <!--Vista modal area objetivo-->
        <prism:InteractionRequestTrigger SourceObject="{Binding TargetAreaNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:TargetAreaView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

    </i:Interaction.Triggers>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <materialDesign:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />
        <Style TargetType="TabItem">
            <Setter Property="Header" Value="{Binding DataContext.Title}" />
        </Style>

        <system:Double x:Key="MenuSize">50</system:Double>

        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <DockPanel >
                                    <materialDesign:PackIcon Kind="MenuDown" DockPanel.Dock="Right" VerticalAlignment="Center" 
                                                             Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                                    <ContentPresenter Content="{Binding}" Margin="5,0" />
                                </DockPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <!--Body application-->
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="8*" />
            <RowDefinition Height="2.5*" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">

            <Menu DockPanel.Dock="Top" IsMainMenu="True" >

                <MenuItem Header="Archivo" Margin="3">
                    <MenuItem Header="Configuración área objetivo" Command="{Binding TargetAreaNotificationCommand}"/>
                    <MenuItem Header="Dispositivos radar" Command="{Binding RadarDevicesNotificationCommand}"/>
                    <MenuItem Header="Administración de escenarios" >
                        <MenuItem Header="Guardar escenario" Click="SaveStage"/>
                        <MenuItem Header="Cargar escenario" Command="{Binding LoadStageCommand}"/>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Salir" Command="{Binding SaveCommand}" />
                </MenuItem>
                <MenuItem Header="Herramientas">
                    <MenuItem Header="Regla">
                        <MenuItem Header="Punto - Punto" Command="{Binding EventosCommand}" CommandParameter="Rule"/>
                    </MenuItem>
                    <MenuItem Header="Pan" Command="{Binding EventosCommand}" CommandParameter="Pan"/>
                    <MenuItem Header="Rotación" Command="{Binding EventosCommand}" CommandParameter="Rotate"/>
                    <MenuItem Header="Centrar" Command="{Binding EventosCommand}" CommandParameter="Centrar"/>
                    <MenuItem Header="Borrar" Command="{Binding EventosCommand}" CommandParameter="Clear"/>
                    <MenuItem Header="Zoom" >
                        <MenuItem Header="Acercar" Command="{Binding EventosCommand}" CommandParameter="ZoomIn"/>
                        <MenuItem Header="Alejar" Command="{Binding EventosCommand}" CommandParameter="ZoomOut" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Capas" Command="{Binding LayersNotificationCommand}">

                </MenuItem>
            </Menu>

        </DockPanel>

        <ContentControl  Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" MaxWidth="450" />
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="8*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="2*" MaxWidth="350"/>
                </Grid.ColumnDefinitions>

                <!--Left panel-->

                <Border CornerRadius="6" BorderBrush="Gray" BorderThickness="2" DockPanel.Dock="Top" Margin="10,10,5,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" prism:RegionManager.RegionName="SidePanels"/>
                        <ContentControl Grid.Row="1" prism:RegionManager.RegionName="RightPanel"/>
                    </Grid>

                </Border>

                <GridSplitter Grid.Column="1" Width="10" HorizontalAlignment="Stretch" Margin="2,10,2,0" ResizeDirection="Auto"/>

                <!--Capa geografica-->
                <ContentControl Grid.Column="2" prism:RegionManager.RegionName="GeoLayer" prism:RegionManager.RegionContext="{Binding TargetAreaMod}" 
                                Margin="10,10,5,0" MinWidth="300"/>

                <GridSplitter Grid.Column="3" Width="10" HorizontalAlignment="Stretch" Margin="2,10,3,0"/>
                <ContentControl Grid.Column="4">
                    <Border CornerRadius="6" BorderBrush="Gray" BorderThickness="2" DockPanel.Dock="Top" Margin="10,10,10,0">
                        <ContentControl prism:RegionManager.RegionName="TargetPanel"/>
                        
                    </Border>
                </ContentControl>
            </Grid>
        </ContentControl>


        <Border Grid.Row="2" CornerRadius="6" BorderBrush="Gray" BorderThickness="2" DockPanel.Dock="Top" Margin="10">
            <ContentControl  prism:RegionManager.RegionName="LogsView" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </Border>

    </Grid>
</Window>

    