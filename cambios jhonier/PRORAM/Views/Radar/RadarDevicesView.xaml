<UserControl x:Class="PRORAM.Views.RadarDevicesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
        xmlns:local="clr-namespace:PRORAM.Views"
        xmlns:local2="clr-namespace:PRORAM"
        xmlns:views="clr-namespace:PRORAM.Views"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"                 
        prism:ViewModelLocator.AutoWireViewModel="True"        
        Background="Transparent"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML" Height="767.333" Loaded="UserControl_Loaded" >

    <UserControl.Resources>
        <ResourceDictionary>
            <local2:MyConverter x:Key="MyConverter"/>
            <Style x:Key="ShadowDepth" TargetType="{x:Type TextBox}">
                <Setter Property="BorderBrush" Value="Wheat" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="White" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>

        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ConsultDevicesCommand}" />
        </i:EventTrigger>


        <prism:InteractionRequestTrigger SourceObject="{Binding ConfigurationChangeNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:ConfigurationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding TXPowerRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="Width" Value="500"/>
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:PowerRadarView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding RaiseChannelFrecRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="Width" Value="550"/>
                        <Setter Property="Height" Value="310"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:ChannelFrecView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:PopupConfirmationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>


        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupRequest2}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:CustomPopupView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>


        <prism:InteractionRequestTrigger SourceObject="{Binding RadarConfigurationNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ResizeMode" Value="CanResize"/>
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="Width" Value="auto"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:RadarConfigurationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <!--Body-->
    <Border CornerRadius="5"  BorderBrush="DimGray" BorderThickness="1" Background="{DynamicResource MaterialDesignPaper}" Width="522" Height="Auto" Margin="0,0,0,-12" >
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Height" Value="800" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ContentControlVisibility}" Value="Collapsed">
                        <Setter Property="Height" Value="430" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid RenderTransformOrigin="0.5,0.569" Height="753" VerticalAlignment="Top" Margin="0,0,0,-1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0" Margin="0,0,10,0">
                <Border MouseDown="Border_MouseDown" Margin="0,0,120,0">
                    <materialDesign:ColorZone Mode="PrimaryDark"  Height="35" CornerRadius="5" HorizontalAlignment="Left" Width="520">
                        <Label Content="Dispositivos radar" Foreground="White" HorizontalAlignment="Center"></Label>
                    </materialDesign:ColorZone>
                </Border>
            </ContentControl>
            <ContentControl Grid.Row="1" Margin="0,0,189,0">
                <Border BorderThickness="5"  CornerRadius="10" Background="DimGray" Margin="10,10,0,10">
                    <StackPanel>
                        <Button Margin="10" HorizontalAlignment="Right" Content="Agregar radar" Command="{Binding RadarconfigurationNotificationCommand}" Click="Button_Click"></Button>
                    </StackPanel>
                </Border>
            </ContentControl>


            <ContentControl Grid.Row="2" Margin="0,0,129,0">
                <DataGrid Margin="10,10,0,10" ItemsSource="{Binding RadarDevicesModel_, Mode=TwoWay}"  
                      SelectedItem="{Binding SRadarDevicesModel}"
                      Background="DimGray"                       
                      AlternatingRowBackground="Gray" 
                      CanUserAddRows="False"
                      AutoGenerateColumns="False"                      
                      Height="238"                       
                      ColumnWidth="Auto" SelectionChanged="DataGrid_SelectionChanged" HorizontalAlignment="Left" Width="502">
                    <DataGrid.Columns >
                        <DataGridTextColumn Width="auto" Header="Id" Binding="{Binding Path=Id}" IsReadOnly="True" />
                        <DataGridTextColumn Width="auto" Header="Nombre" Binding="{Binding Path=RadarName}" IsReadOnly="True" />
                        <DataGridTemplateColumn Width="auto" Header="Modo 2">
                            
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding  Check, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              Command="{Binding Path=DataContext.GetIdRadarCheckboxCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                               />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Width="auto" Header="Estado conexión"  >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <StackPanel.Resources>
                                            <Style TargetType="Button" x:Key="ButtonStyle"  BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                <Setter Property="Background" Value="DimGray"/>
                                                
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Check}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSaveComplete}" Value="True">
                                                        <Setter Property="Background" Value="#2196f3" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSaveComplete}" Value="False">
                                                        <Setter Property="Background" Value="DimGray" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button  Style="{StaticResource ButtonStyle}"
                                                 Command="{Binding Path=DataContext.GetIdRadarCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                 materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding Path=IsSaving}"
                                                 materialDesign:ButtonProgressAssist.Value="{Binding Path=SaveProgress}" >

                                            <!-- simple example of toggling/animating pack icon with a data trigger-->
                                            <materialDesign:PackIcon Height="24" Width="24">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                        <Setter Property="Kind" Value="PowerPlugOff" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding  Path=IsSaveComplete}" Value="True">
                                                                <Setter Property="Kind" Value="PowerPlug" />
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
 <!--                      ############################################################################        -->
                        <DataGridTemplateColumn Width="auto" Header="Radiando" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <StackPanel.Resources>
                                            <Style TargetType="Button" x:Key="ButtonStyle"  BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                <Setter Property="Background" Value="DimGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Check}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSaveCompleteT}" Value="True">
                                                        <Setter Property="Background" Value="#2196f3" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSaveCompleteT}" Value="False">
                                                        <Setter Property="Background" Value="DimGray" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button  Style="{StaticResource ButtonStyle}"
                                        Command="{Binding Path=DataContext.RadiationCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding Path=IsSavingT}"
                                        materialDesign:ButtonProgressAssist.Value="{Binding Path=SaveProgressT}">
                                            <materialDesign:PackIcon Height="24" Width="24">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                        <Setter Property="Kind" Value="PowerPlugOff" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding  Path=IsSaveCompleteT}" Value="True">
                                                                <Setter Property="Kind" Value="PowerPlug" />
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--Acciones-->
                        <DataGridTemplateColumn Width="auto" Header="Acciones" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Menu IsMainMenu="False" Background="LightGray" Foreground="Black">
                                        <MenuItem Header="Opciones" Height="30" >
                                            <MenuItem Header="Configurar" Command="{Binding Path=DataContext.ConfigurationChangeCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                            <MenuItem Header="Potencia" Command="{Binding Path=DataContext.TXPowerCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                            <MenuItem Header="Canales de transmisión" Command="{Binding Path=DataContext.RaiseChannelFrecCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                            <MenuItem Header="Remover" Command="{Binding Path=DataContext.ConfirmationCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                        </MenuItem>
                                    </Menu>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ContentControl>

            <ContentControl Grid.Row="3" Visibility="{Binding ContentControlVisibility}" HorizontalAlignment="Left" Width="Auto" >
                <Border MouseDown="Border_MouseDown" Margin="0,0,105,0">
                    <materialDesign:ColorZone Mode="PrimaryDark"  Height="35" CornerRadius="5" HorizontalAlignment="Left" Width="518">
                        <Label Content="Dispositivos radar modo 2" Foreground="White" HorizontalAlignment="Center"></Label>
                    </materialDesign:ColorZone>
                </Border>
            </ContentControl>

            <ContentControl Grid.Row="4" Visibility="{Binding ContentControlVisibility}" Margin="0,0,95,-19">
                <DataGrid Margin="10,10,100,73" ItemsSource="{Binding RadarDevicesMode2_, Mode=TwoWay}"  
                      SelectedItem="{Binding SRadarDevicesModel}"
                      Background="DimGray"                       
                      AlternatingRowBackground="Gray" 
                      CanUserAddRows="False"
                      AutoGenerateColumns="False"                       
                      ColumnWidth="Auto" SelectionChanged="DataGrid_SelectionChanged" Width="496">

                    <DataGrid.Columns >
                        <DataGridTextColumn Width="100" Header="Id" Binding="{Binding Path=Id}" IsReadOnly="True" />
                        <DataGridTextColumn Width="150" Header="Nombre" Binding="{Binding Path=RadarName}" IsReadOnly="True" />
                        <DataGridTemplateColumn Width="200" Header="Orden">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Name ="OrdenEjecucion" Margin="1"  Width="150" Height="25" Background="LightGray" HorizontalAlignment="Left" 
                                             TextAlignment="Center" Foreground="Black" Text="{Binding Path=Orden,  Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=LostFocus}">

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                </DataGrid>
            </ContentControl>

            <ContentControl Grid.Row="5" Visibility="{Binding ContentControlVisibility}" Margin="0,0,189,0" >
                <Border BorderThickness="5"  CornerRadius="10" Background="DimGray" Margin="0,271,0,0">
                    <StackPanel Margin="0,0,0,-5" Orientation="Horizontal" >
                        <Label Content="Tiempo de operacion entre radar" Foreground="White" Margin="5" HorizontalAlignment="Left" ></Label>
                        <TextBox  Name ="TiempoEjecucion" Margin="5,10,5,11" Width="50" Background="LightGray" HorizontalAlignment="Left" 
                                  materialDesign:HintAssist.Hint="time" BorderBrush="DimGray" BorderThickness="2" 
                                   TextAlignment="Center" Foreground="Black" Text="{Binding TiempoEjecucion, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                           >
                        </TextBox>
                        <Label Content="ms" Foreground="White" Margin="5" HorizontalAlignment="Left" ></Label>
                        <Button Margin="10" HorizontalAlignment="Right" Content="Activar modo 2" Command="{Binding RadarconfigurationModo_2}" Click="Button_Click" Height="30" Width="132"/>
                    </StackPanel>
                </Border>
            </ContentControl>

            <ContentControl Grid.Row="6" Margin="0,0,0,0">
                <StackPanel Grid.Row="4"  VerticalAlignment="Bottom" Height="48" Margin="10,0,114,-40">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Margin" Value="10,290,114,10" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ContentControlVisibility}" Value="Collapsed">
                                    <Setter Property="Margin" Value="10,5,114,10" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Button Command="{Binding CancelCommand}" Content="Cerrar" Foreground="Black" Background="LightGray" Margin="406,10,83,10" Click="Button_Click_1" Height="25" RenderTransformOrigin="-0.404,0.426" />
                </StackPanel>
            </ContentControl>
        </Grid>
    </Border>
</UserControl>
