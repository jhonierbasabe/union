<UserControl x:Class="PRORAM.Views.SidePanelsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:PRORAM.Views"            
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        prism:ViewModelLocator.AutoWireViewModel="True"      
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"        
        TextElement.FontWeight="Medium"
        TextElement.FontSize="10"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        mc:Ignorable="d"
        Height="auto" Width="auto">


    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding RadarConfigurationNotificationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="Height"/>
                        <Setter Property="Width" Value="720"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:RadarConfigurationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:CustomPopupView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

    </i:Interaction.Triggers>
    

    <UserControl.Resources>

        <!--Template para toggle button de las grillas-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="PowerDown">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="PowerUp">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="PowerDown"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M12,2C9.76,2 7.78,3.05 6.5,4.68L16.31,14.5C17.94,13.21 19,11.24 19,9A7,7 0 0,0 12,2M3.28,4L2,5.27L5.04,8.3C5,8.53 5,8.76 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H14.73L18.73,22L20,20.72L3.28,4M9,20V21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9Z">
                    <Path.Fill>
                        <SolidColorBrush Color="LightGray" />
                    </Path.Fill>
                </Path>
                <Path x:Name="PowerUp"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed"
                        Data="M12,2A7,7 0 0,0 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H15A1,1 0 0,0 16,17V14.74C17.81,13.47 19,11.38 19,9A7,7 0 0,0 12,2M9,21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9V21Z">
                    <Path.Fill>
                        <SolidColorBrush Color="Green" />
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>


        <!--Template para la el toggle button del expander-->
        <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
                    CornerRadius="2,0,0,0"
                    BorderThickness="0,0,1,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                          Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                          Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </Border.BorderBrush>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z">
                        <Path.Fill>
                            <SolidColorBrush Color="DimGray" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed"
            Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" >
                        <Path.Fill>
                            <SolidColorBrush Color="DimGray" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                           Height="0" />
                            </Grid.RowDefinitions>

                            <Border x:Name="Border"
                                    Grid.Row="0"
                                    Background="DodgerBlue"
                                    BorderBrush="DimGray"
                                    BorderThickness="1"
                                    CornerRadius="5,5,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />

                                    <ToggleButton HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,5,6"
                                                  OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}"             IsChecked="{Binding IsExpanded, Mode=TwoWay,   RelativeSource={RelativeSource TemplatedParent}}">

                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                              Grid.Row="1"                                    
                              BorderThickness="1,0,1,1"
                              CornerRadius="0,0,10,10">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ContentAreaColorDark}" />
                                </Border.Background>
                                <ContentPresenter Margin="0,4,0,4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                   Value="True">
                                <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <ContentControl Grid.Row="0" Margin="5">
            <Border CornerRadius="6" BorderBrush="DimGray" BorderThickness="1.5" Padding="2">
                <Expander  BorderBrush="DimGray" BorderThickness="1.5"   Margin="2.5"
                       Name="Expander1"
                       Header="Dispositivos" 
                       Background="black"               
                       Foreground="White"                                   
                       IsExpanded="{Binding ExpanderPanelDevice, Mode=TwoWay}" >

                    <materialDesign:ColorZone Mode="Dark">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200*"/>
                                <ColumnDefinition Width="189*"/>
                                <ColumnDefinition Width="11*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0" Grid.ColumnSpan="5">


                                <Button Margin="0,0,10,0" HorizontalAlignment="Right" Command="{Binding AgregarRadar}"
                                VerticalAlignment="Top" Width="24" Height="24" Style="{StaticResource MaterialDesignFloatingActionAccentButton}" Background="Transparent" BorderBrush="Transparent">
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="Green" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </DockPanel>

                       
                                        
                            <Separator Grid.Row="1" Grid.ColumnSpan="3" Margin="0,2,0,2"/>
                            
                            <ContentControl Grid.Row="2" Grid.ColumnSpan="3">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <DataGrid Margin="5" ItemsSource="{Binding RadarDevicesModel_, Mode=TwoWay}"  
                                      SelectedItem="{Binding SRadarDevicesModel}"
                                      Background="DimGray"                       
                                      AlternatingRowBackground="Gray" 
                                      CanUserAddRows="False"    
                                      AutoGenerateColumns="False"                      
                                      Height="217"                                  
                                      ColumnWidth="Auto">

                                        <DataGrid.Columns >
                                            <DataGridTextColumn Width="45" Header="Id" Binding="{Binding Path=Id}" IsReadOnly="True" FontSize="10" />
                                            <DataGridTemplateColumn Width="88">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <DockPanel>
                                                            <TextBox Text="{Binding Path=RadarName}"></TextBox>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.Header>
                                                    <HeaderedContentControl>
                                                        <TextBox Text="Dispositivos" TextWrapping="Wrap" BorderThickness="0" HorizontalAlignment="Center" FontSize="10"></TextBox>
                                                    </HeaderedContentControl>

                                                </DataGridTemplateColumn.Header>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Width="auto"   IsReadOnly="True" >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ToggleButton Template="{StaticResource  ComboBoxToggleButton}" 
                                                                      IsChecked="{Binding Path=StateConnection}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        </ToggleButton>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.Header>
                                                    <HeaderedContentControl>
                                                        <TextBox Text="Conexión" TextWrapping="Wrap" BorderThickness="0" HorizontalAlignment="Center" FontSize="10"></TextBox>
                                                    </HeaderedContentControl>
                                                </DataGridTemplateColumn.Header>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Width="80"  IsReadOnly="True"  >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ToggleButton Template="{StaticResource  ComboBoxToggleButton}" 
                                                                      IsChecked="{Binding Path=Radiation}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        </ToggleButton>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                                <DataGridTemplateColumn.Header>
                                                    <HeaderedContentControl>
                                                        <TextBox Text="Radiación" TextWrapping="Wrap" BorderThickness="0" HorizontalAlignment="Center" FontSize="10"></TextBox>
                                                    </HeaderedContentControl>
                                                </DataGridTemplateColumn.Header>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="Información">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Button Command="{Binding Path=DataContext.DetailRadarCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                                    Background="Transparent" Style="{StaticResource MaterialDesignFlatButton}">
                                                                <Viewbox Width="24" Height="24">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Data="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z" 
                                                                              Fill="DodgerBlue"/>
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </ScrollViewer>
                            </ContentControl>
                            
                        </Grid>
                    </materialDesign:ColorZone>
                </Expander>
            </Border>


        </ContentControl>

        <!--<ContentControl Grid.Row="1" Margin="5">
            <Border CornerRadius="6" BorderBrush="DimGray" BorderThickness="1.5"  Height="auto" Width="auto">
                <Expander  BorderBrush="DimGray" BorderThickness="1.5"   Margin="2.5"
                       Name="Expander2"                          
                       Header="Blancos" 
                       Background="black"               
                       Foreground="White"                                   
                       IsExpanded="{Binding Expander, Mode=OneWay}" >
                    <materialDesign:ColorZone Mode="Dark"  Grid.Row="0">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0">
                                <Button Margin="0,0,10,0" HorizontalAlignment="Right"
                                VerticalAlignment="Center" Width="24" Height="24" Style="{StaticResource MaterialDesignFloatingActionAccentButton}" Background="Transparent" BorderBrush="Transparent">
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" Fill="DarkGreen" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </DockPanel>
                            <Separator Grid.Row="1"/>
                            -->
        <!--<ContentControl Grid.Row="2">
                                <DataGrid Margin="5" ItemsSource="{Binding Unknow, Mode=TwoWay}"  
                                  SelectedItem="{Binding Unknow}"
                                  Background="DimGray"                       
                                  AlternatingRowBackground="Gray" 
                                  CanUserAddRows="False"
                                  AutoGenerateColumns="False"                      
                                  Height="auto"                       
                                  ColumnWidth="Auto">
                                    <DataGrid.Columns >
                                        <DataGridTextColumn Width="50" Header="#" Binding="{Binding Path=Id}" IsReadOnly="True" />
                                        <DataGridTextColumn Width="100" Header="Id" Binding="{Binding Path=Id}" IsReadOnly="True" />
                                        <DataGridTemplateColumn Width="100" Header="Azimuth" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Menu IsMainMenu="False" Background="LightGray" Foreground="Black">
                                                        <MenuItem Header="Opciones" Height="30" >
                                                            <MenuItem Header="Configurar" Command="{Binding Path=DataContext.RaiseConfirmatio, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                                            <MenuItem Header="Potencia" Command="{Binding Path=DataContext.TXPowerCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                                            <MenuItem Header="Canales de transmisión" Command="{Binding Path=DataContext.RaiseConfirmatio, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                                            <MenuItem Header="Remover" Command="{Binding Path=DataContext.ConfirmationCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                                        </MenuItem>
                                                    </Menu>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </ContentControl>-->
        <!--
                        </Grid>
                    </materialDesign:ColorZone>
                </Expander>
            </Border>
        </ContentControl>-->

    </Grid>

</UserControl>
