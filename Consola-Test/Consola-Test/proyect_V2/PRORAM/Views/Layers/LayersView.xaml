<UserControl x:Class="PRORAM.Views.LayersView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PRORAM.Views"                     
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             prism:ViewModelLocator.AutoWireViewModel="True"  
        Background="Transparent"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        mc:Ignorable="d"
             Height="auto" Width="auto">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadScreenCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="PowerDown">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="PowerUp">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="PowerDown"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M12,2C9.76,2 7.78,3.05 6.5,4.68L16.31,14.5C17.94,13.21 19,11.24 19,9A7,7 0 0,0 12,2M3.28,4L2,5.27L5.04,8.3C5,8.53 5,8.76 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H14.73L18.73,22L20,20.72L3.28,4M9,20V21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9Z">
                    <Path.Fill>
                        <SolidColorBrush Color="LightGray" />
                    </Path.Fill>
                </Path>
                <Path x:Name="PowerUp"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed"
                        Data="M12,2A7,7 0 0,0 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H15A1,1 0 0,0 16,17V14.74C17.81,13.47 19,11.38 19,9A7,7 0 0,0 12,2M9,21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9V21Z">
                    <Path.Fill>
                        <SolidColorBrush Color="Green" />
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>
    </UserControl.Resources>
    <Border BorderBrush="DimGray" BorderThickness="1" CornerRadius="5" Background="{DynamicResource MaterialDesignPaper}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>

            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0">
                <Border MouseDown="Border_MouseDown">
                    <materialDesign:ColorZone Mode="PrimaryDark"  Height="35" CornerRadius="5" >
                        <Label Name="Title" Margin="10,0,0,0"
                               Foreground="White">Configuración de capas </Label>
                    </materialDesign:ColorZone>
                </Border>
            </ContentControl>
            <ContentControl Grid.Row="1">
                <DataGrid ItemsSource="{Binding LayerModel, Mode=TwoWay}" 
                          Height="auto" Margin="10" SelectedItem="{Binding SLayerModel}"
                          AutoGenerateColumns="False"    
                          Width="auto"
                          AlternatingRowBackground="Gray" 
                          CanUserAddRows="False"
                          Background="DimGray">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Width="auto"  Binding="{Binding Path=Id}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Nombre" Width="auto" Binding="{Binding Path=Name}" IsReadOnly="True"/>
                        <!--<DataGridCheckBoxColumn Header="Mostrar capa" Width="auto" Binding="{Binding Path=State}" />-->
                        <DataGridTemplateColumn Width="auto" Header="Mostrar capa" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <ToggleButton IsChecked="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding Path=DataContext.UpdateLayersCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                        </ToggleButton>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ContentControl>
            <Separator Grid.Row="2" Margin="5,0,5,0"/>
            <!--<ContentControl Grid.Row="3" Visibility="Hidden">
                <Expander Name="ExpanderH" Header="Mapa de clutter"  Background="DodgerBlue" Foreground="White">
                    <StackPanel>
                        --><!--<Label Name="Label1" Content="Mapa de clutter" Foreground="White" Margin="10" Visibility="Hidden"/>--><!--
                        <DataGrid ItemsSource="{Binding Devices, Mode=TwoWay}" 
                          Height="auto" Margin="0" SelectedItem="{Binding SDevices}"
                          AutoGenerateColumns="False"      
                          AlternatingRowBackground="Gray" 
                          CanUserAddRows="False"
                          Background="DimGray">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Width="auto" Binding="{Binding Path=Id}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Dispositivo radar" Width="auto" Binding="{Binding Path=RadarName}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Header="Mapa de clutter" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <ToggleButton IsChecked="{Binding MClutter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding Path=DataContext.UpdateMClutterCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                                </ToggleButton>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                                                
                                <DataGridTemplateColumn Width="auto" Header="Acciones" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <Button Command="{Binding GenerateClutterCommand}">
                                                    <TextBlock FontSize="12">
                                                        <TextBlock.Text>
                                                            Generar mapa de clutter
                                                        </TextBlock.Text>
                                                    </TextBlock>    
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Expander>
            </ContentControl>-->
            <ContentControl Grid.Row="4" Margin="10">
                <DockPanel HorizontalAlignment="Right">
                    <Button Background="LightGray" Foreground="Black" Command="{Binding CancelCommand}">Cerrar</Button>
                </DockPanel>
            </ContentControl>
        </Grid>
    </Border>
</UserControl>
